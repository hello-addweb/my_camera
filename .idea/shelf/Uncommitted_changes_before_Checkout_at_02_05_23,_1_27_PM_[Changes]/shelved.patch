Index: lib/my_cameranew.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>library my_camera;\n\nimport 'dart:async';\nimport 'dart:io';\nimport 'dart:typed_data';\n\nimport 'package:flutter/foundation.dart';\nimport 'package:flutter/gestures.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\n\nimport 'my_camera_plugin.dart';\n\npart 'controller.dart';\n\nenum FlashType { auto, on, off, torch }\nenum CameraType { front, rear }\nenum CameraPreviewRatio { r16_9, r11_9, r4_3, r1 }\n\ntypedef void CameraCreatedCallback(MyCameraController controller);\ntypedef void ImageCapturedCallback(String path);\n\nclass MyCamera extends StatefulWidget {\n  final CameraType initialCameraType;\n  final CameraPreviewRatio cameraPreviewRatio;\n  static const int CAMERA_BACK = 0;\n  static const int CAMERA_FRONT = 1;\n\n  static const Size PREVIEW = Size(640, 480);\n\n  final CameraCreatedCallback onCameraCreated;\n  final ImageCapturedCallback onImageCaptured;\n  final FlashType flashType;\n  final bool bestPictureSize;\n  final String fileNamePrefix;\n\n  const MyCamera({\n    Key key,\n    CameraType initialCameraType,\n    CameraPreviewRatio cameraPreviewRatio,\n    FlashType flashType,\n    bool bestPictureSize,\n    this.onCameraCreated,\n    this.onImageCaptured,\n    this.fileNamePrefix,\n  })  : this.initialCameraType = initialCameraType ?? CameraType.rear,\n        this.cameraPreviewRatio =\n            cameraPreviewRatio ?? CameraPreviewRatio.r16_9,\n        this.flashType = flashType ?? FlashType.auto,\n        this.bestPictureSize = bestPictureSize ?? true,\n        super(key: key);\n\n  @override\n  _MyCameraState createState() => _MyCameraState();\n}\n\nclass _MyCameraState extends State<MyCamera> {\n  Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers;\n  CameraPreviewRatio _cameraPreviewRatio;\n\n  FlashType _flashType;\n  bool hasPermission = false;\n\n\n  @override\n  void initState() {\n    super.initState();\n    _cameraPreviewRatio = widget.cameraPreviewRatio;\n\n    _flashType = widget.flashType;\n\n    MyCameraPlugin.checkForPermission().then((value) {\n      if (this.mounted)\n        setState(() {\n          hasPermission = value;\n        });\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    String previewRatio;\n    String sessionPreset;\n    String flashType;\n\n    if (!hasPermission) return Center(child: CircularProgressIndicator());\n\n    switch (_flashType) {\n      case FlashType.on:\n        flashType = \"on\";\n        break;\n      case FlashType.off:\n        flashType = \"off\";\n        break;\n      case FlashType.auto:\n        flashType = \"auto\";\n        break;\n      case FlashType.torch:\n        flashType = \"torch\";\n        break;\n    }\n\n    switch (_cameraPreviewRatio) {\n      case CameraPreviewRatio.r16_9:\n        previewRatio = \"16:9\";\n        break;\n      case CameraPreviewRatio.r11_9:\n        previewRatio = \"11:9\";\n        break;\n      case CameraPreviewRatio.r4_3:\n        previewRatio = \"4:3\";\n        break;\n      case CameraPreviewRatio.r1:\n        previewRatio = \"1:1\";\n        break;\n    }\n\n    final Map<String, dynamic> creationParams = <String, dynamic>{\n      \"initialCameraType\":\n          widget.initialCameraType == CameraType.rear ? \"rear\" : \"front\",\n      \"previewRatio\": previewRatio,\n      \"sessionPreset\": sessionPreset,\n      \"flashType\": flashType,\n      \"fileNamePrefix\": widget.fileNamePrefix ?? \"my_camera\",\n      \"bestPictureSize\": widget.bestPictureSize,\n    };\n\n    Widget camera;\n\n    if (defaultTargetPlatform == TargetPlatform.android) {\n      camera = AndroidView(\n        viewType: 'plugins.flutter.io/my_camera',\n        onPlatformViewCreated: onPlatformViewCreated,\n        gestureRecognizers: gestureRecognizers,\n        creationParams: creationParams,\n        creationParamsCodec: const StandardMessageCodec(),\n      );\n    } else if (defaultTargetPlatform == TargetPlatform.iOS) {\n      camera = UiKitView(\n        viewType: 'plugins.flutter.io/my_camera',\n        onPlatformViewCreated: onPlatformViewCreated,\n        gestureRecognizers: gestureRecognizers,\n        creationParams: creationParams,\n        creationParamsCodec: const StandardMessageCodec(),\n      );\n    }\n\n    return LayoutBuilder(\n      builder: (BuildContext context, BoxConstraints constraints) {\n        double lesser;\n        double greater;\n        double widthTemp;\n        double heightTemp;\n        double width;\n        double height;\n        double selectedPreviewRatio;\n        double constraintRatio;\n\n        if (constraints.maxWidth < constraints.maxHeight) {\n          greater = constraints.maxHeight;\n          lesser = constraints.maxWidth;\n          constraintRatio = constraints.maxWidth / constraints.maxHeight;\n        } else {\n          greater = constraints.maxWidth;\n          lesser = constraints.maxHeight;\n          constraintRatio = constraints.maxHeight / constraints.maxWidth;\n        }\n\n        switch (_cameraPreviewRatio) {\n          case CameraPreviewRatio.r16_9:\n            selectedPreviewRatio = 9.0 / 16.0;\n            if (constraintRatio >= selectedPreviewRatio) {\n              widthTemp = lesser;\n              heightTemp = lesser * 16.0 / 9.0;\n            } else {\n              heightTemp = greater;\n              widthTemp = greater * 9.0 / 16.0;\n            }\n            break;\n          case CameraPreviewRatio.r11_9:\n            selectedPreviewRatio = 9.0 / 11.0;\n            if (constraintRatio >= selectedPreviewRatio) {\n              widthTemp = lesser;\n              heightTemp = lesser * 11.0 / 9.0;\n            } else {\n              heightTemp = greater;\n              widthTemp = greater * 9.0 / 11.0;\n            }\n            break;\n          case CameraPreviewRatio.r4_3:\n            selectedPreviewRatio = 3.0 / 4.0;\n            if (constraintRatio >= selectedPreviewRatio) {\n              widthTemp = lesser;\n              heightTemp = lesser * 4.0 / 3.0;\n            } else {\n              heightTemp = greater;\n              widthTemp = greater * 3.0 / 4.0;\n            }\n            break;\n          case CameraPreviewRatio.r1:\n            if (constraintRatio >= 1.0) {\n              widthTemp = lesser;\n              heightTemp = lesser;\n            } else {\n              heightTemp = greater;\n              widthTemp = greater;\n            }\n            break;\n        }\n\n        if (Platform.isAndroid) {\n          if (constraints.maxWidth < constraints.maxHeight) {\n            width = widthTemp;\n            height = heightTemp;\n          } else {\n            width = heightTemp;\n            height = widthTemp;\n          }\n        } else {\n          width = constraints.maxWidth;\n          height = constraints.maxHeight;\n        }\n\n        return ClipRect(\n          child: OverflowBox(\n            maxWidth: width,\n            maxHeight: height,\n            child: camera,\n          ),\n          clipper: CustomRect(\n            right: constraints.maxWidth,\n            bottom: constraints.maxHeight,\n          ),\n        );\n      },\n    );\n  }\n\n  Future<void> onPlatformViewCreated(int id) async {\n    final MyCameraController controller = await MyCameraController.init(\n      id,\n      this,\n    );\n\n    if (widget.onCameraCreated != null) {\n      widget.onCameraCreated(controller);\n    }\n\n  }\n\n  /// @return the greatest common denominator\n  int findGcm(int a, int b) {\n    return b == 0 ? a : findGcm(b, a % b); // Not bad for one line of code :)\n  }\n\n  String asFraction(int a, int b) {\n    int gcm = findGcm(a, b);\n    return \"${(a / gcm)} : ${(b / gcm)}\";\n  }\n\n  void onImageCaptured(String path) {\n    if (widget.onImageCaptured != null) {\n      widget.onImageCaptured(path);\n    }\n  }\n}\n\nclass CustomRect extends CustomClipper<Rect> {\n  final double right;\n  final double bottom;\n\n  CustomRect({this.right, this.bottom});\n\n  @override\n  Rect getClip(Size size) {\n    Rect rect = Rect.fromLTRB(0.0, 0.0, right, bottom);\n    return rect;\n  }\n\n  @override\n  bool shouldReclip(CustomRect oldClipper) {\n    return true;\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/my_cameranew.dart b/lib/my_cameranew.dart
--- a/lib/my_cameranew.dart	(revision d4d887d615bf38810ce6cc75cd132d5eee593dcb)
+++ b/lib/my_cameranew.dart	(date 1683014176710)
@@ -2,8 +2,6 @@
 
 import 'dart:async';
 import 'dart:io';
-import 'dart:typed_data';
-
 import 'package:flutter/foundation.dart';
 import 'package:flutter/gestures.dart';
 import 'package:flutter/material.dart';
Index: example/lib/main.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:async';\nimport 'dart:io';\nimport 'dart:typed_data';\n\nimport 'package:custom_camera/my_cameranew.dart';\nimport 'package:flutter/cupertino.dart';\nimport 'package:flutter/material.dart';\n\nimport 'new.dart';\n\nvoid main() {\n  String id = DateTime.now().toIso8601String();\n  runApp(MaterialApp(home: MyApp(id: id)));\n}\n\nclass MyApp extends StatefulWidget {\n  final String id;\n\n  const MyApp({Key key, this.id}) : super(key: key);\n\n  @override\n  _MyAppState createState() => _MyAppState();\n}\n\nclass _MyAppState extends State<MyApp> {\n  List<String> pictureSizes = [];\n  String imagePath;\n  Uint8List bytes = Uint8List(0);\n\n  TextEditingController outputController;\n  MyCameraController cameraController;\n\n  @override\n  initState() {\n    super.initState();\n    this.outputController = new TextEditingController();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text('Home'),\n      ),\n      body: SafeArea(\n        child: Stack(\n          children: [\n            Column(\n              children: [\n                Container(\n                  color: Colors.transparent,\n                  child: Row(\n                    children: [\n                      IconButton(\n                        icon: Icon(\n                          Icons.flash_off_outlined,\n                          color: Colors.black,\n                        ),\n                        onPressed: () {\n                          cameraController.setFlashType(FlashType.off);\n                        },\n                      ),\n                      IconButton(\n                        icon: Icon(\n                          Icons.flash_on,\n                          color: Colors.black,\n                        ),\n                        onPressed: () {\n                          cameraController.setFlashType(FlashType.torch);\n                        },\n                      ),\n                    ],\n                  ),\n                ),\n                TextField(\n                  controller: this.outputController,\n                  maxLines: 2,\n                  decoration: InputDecoration(\n                    prefixIcon: Icon(Icons.wrap_text),\n                    hintText:\n                        'The barcode or qrcode you scan will be displayed in this area.',\n                    hintStyle: TextStyle(fontSize: 15),\n                    contentPadding:\n                        EdgeInsets.symmetric(horizontal: 7, vertical: 15),\n                  ),\n                ),\n                Expanded(\n                    child: Container(\n                  child: MyCamera(\n                    onCameraCreated: _onCameraCreated,\n                    onImageCaptured: (String path) {\n                      print(\"onImageCaptured => \" + path);\n                      if (this.mounted)\n                        setState(() {\n                          imagePath = path;\n                        });\n                    },\n                    cameraPreviewRatio: CameraPreviewRatio.r16_9,\n                  ),\n                )),\n              ],\n            ),\n            Positioned(\n              bottom: 16.0,\n              left: 16.0,\n              child: imagePath != null\n                  ? Container(\n                      width: 100.0,\n                      height: 100.0,\n                      child: Image.file(File(imagePath)))\n                  : Icon(Icons.image),\n            )\n          ],\n        ),\n      ),\n      floatingActionButton: Column(\n          crossAxisAlignment: CrossAxisAlignment.end,\n          mainAxisSize: MainAxisSize.min,\n          children: [\n            FloatingActionButton(\n              heroTag: 1,\n              child: Icon(Icons.switch_camera),\n              onPressed: () async {\n                await cameraController.switchCamera();\n              },\n            ),\n            Container(height: 16.0),\n            FloatingActionButton(\n                heroTag: 2,\n                child: Icon(Icons.camera_alt),\n                onPressed: () {\n                  cameraController.captureImage();\n                }),\n            Container(height: 16.0),\n            FloatingActionButton(\n                heroTag: 3,\n                child: Icon(Icons.scanner),\n                onPressed: () {\n                  _scan();\n                }),\n            Container(height: 16.0),\n            FloatingActionButton(\n                heroTag: 4,\n                child: Icon(Icons.chrome_reader_mode),\n                onPressed: () {\n                  _navigation();\n                }),\n          ]),\n    );\n  }\n\n  Future _scan() async {\n    String barcode = await cameraController.scan();\n\n    if (barcode == null) {\n      print('nothing return.');\n    } else {\n      this.outputController.text = barcode;\n      print(barcode);\n    }\n  }\n\n  _onCameraCreated(MyCameraController controller) {\n    this.cameraController = controller;\n\n    this.cameraController.getPictureSizes().then((pictureSizes) {\n      setState(() {\n        this.pictureSizes = pictureSizes;\n      });\n    });\n  }\n\n  void _navigation() {\n    Navigator.push(\n      context,\n      new MaterialPageRoute(builder: (context) => new Home()),\n    );\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/example/lib/main.dart b/example/lib/main.dart
--- a/example/lib/main.dart	(revision d4d887d615bf38810ce6cc75cd132d5eee593dcb)
+++ b/example/lib/main.dart	(date 1683014176722)
@@ -1,9 +1,9 @@
 import 'dart:async';
 import 'dart:io';
-import 'dart:typed_data';
 
 import 'package:custom_camera/my_cameranew.dart';
 import 'package:flutter/cupertino.dart';
+import 'package:flutter/foundation.dart';
 import 'package:flutter/material.dart';
 
 import 'new.dart';
Index: example/test/widget_test.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// This is a basic Flutter widget test.\n//\n// To perform an interaction with a widget in your test, use the WidgetTester\n// utility that Flutter provides. For example, you can send tap and scroll\n// gestures. You can also use WidgetTester to find child widgets in the widget\n// tree, read text, and verify that the values of widget properties are correct.\n\nimport 'package:flutter/material.dart';\nimport 'package:flutter_test/flutter_test.dart';\n\nimport 'package:my_camera_example/main.dart';\n\nvoid main() {\n  testWidgets('Verify Platform version', (WidgetTester tester) async {\n    // Build our app and trigger a frame.\n    await tester.pumpWidget(MyApp());\n\n    // Verify that platform version is retrieved.\n    expect(\n      find.byWidgetPredicate(\n        (Widget widget) => widget is Text &&\n                           widget.data.startsWith('Running on:'),\n      ),\n      findsOneWidget,\n    );\n  });\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/example/test/widget_test.dart b/example/test/widget_test.dart
--- a/example/test/widget_test.dart	(revision d4d887d615bf38810ce6cc75cd132d5eee593dcb)
+++ b/example/test/widget_test.dart	(date 1683013728124)
@@ -5,10 +5,10 @@
 // gestures. You can also use WidgetTester to find child widgets in the widget
 // tree, read text, and verify that the values of widget properties are correct.
 
+import 'package:example/main.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter_test/flutter_test.dart';
 
-import 'package:my_camera_example/main.dart';
 
 void main() {
   testWidgets('Verify Platform version', (WidgetTester tester) async {
Index: .dart_tool/package_config.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"configVersion\": 2,\n  \"packages\": [\n    {\n      \"name\": \"async\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/async-2.5.0-nullsafety\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"boolean_selector\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/boolean_selector-2.1.0-nullsafety\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"characters\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/characters-1.1.0-nullsafety.2\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"charcode\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/charcode-1.2.0-nullsafety\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"clock\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/clock-1.1.0-nullsafety\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"collection\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/collection-1.15.0-nullsafety.2\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"fake_async\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/fake_async-1.1.0-nullsafety\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"flutter\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/packages/flutter\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"flutter_test\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/packages/flutter_test\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.2\"\n    },\n    {\n      \"name\": \"matcher\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/matcher-0.12.10-nullsafety\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"meta\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/meta-1.3.0-nullsafety.2\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"path\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/path-1.8.0-nullsafety\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"sky_engine\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/bin/cache/pkg/sky_engine\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"1.11\"\n    },\n    {\n      \"name\": \"source_span\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/source_span-1.8.0-nullsafety\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"stack_trace\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/stack_trace-1.10.0-nullsafety\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"stream_channel\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/stream_channel-2.1.0-nullsafety\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"string_scanner\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/string_scanner-1.1.0-nullsafety\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"term_glyph\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/term_glyph-1.2.0-nullsafety\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"test_api\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/test_api-0.2.19-nullsafety\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"typed_data\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/typed_data-1.3.0-nullsafety.2\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"vector_math\",\n      \"rootUri\": \"file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0-nullsafety.2\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.10\"\n    },\n    {\n      \"name\": \"custom_camera\",\n      \"rootUri\": \"../\",\n      \"packageUri\": \"lib/\",\n      \"languageVersion\": \"2.7\"\n    }\n  ],\n  \"generated\": \"2020-11-27T13:27:27.877080Z\",\n  \"generator\": \"pub\",\n  \"generatorVersion\": \"2.10.0-136.0.dev\"\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.dart_tool/package_config.json b/.dart_tool/package_config.json
--- a/.dart_tool/package_config.json	(revision d4d887d615bf38810ce6cc75cd132d5eee593dcb)
+++ b/.dart_tool/package_config.json	(date 1683014253916)
@@ -3,138 +3,138 @@
   "packages": [
     {
       "name": "async",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/async-2.5.0-nullsafety",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/async-2.10.0",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.18"
     },
     {
       "name": "boolean_selector",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/boolean_selector-2.1.0-nullsafety",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/boolean_selector-2.1.1",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.17"
     },
     {
       "name": "characters",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/characters-1.1.0-nullsafety.2",
-      "packageUri": "lib/",
-      "languageVersion": "2.10"
-    },
-    {
-      "name": "charcode",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/charcode-1.2.0-nullsafety",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/characters-1.2.1",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.12"
     },
     {
       "name": "clock",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/clock-1.1.0-nullsafety",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/clock-1.1.1",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.12"
     },
     {
       "name": "collection",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/collection-1.15.0-nullsafety.2",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/collection-1.17.0",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.12"
     },
     {
       "name": "fake_async",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/fake_async-1.1.0-nullsafety",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/fake_async-1.3.1",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.12"
     },
     {
       "name": "flutter",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/packages/flutter",
+      "rootUri": "file:///home/addweb/dev/flutter/packages/flutter",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.17"
     },
     {
       "name": "flutter_test",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/packages/flutter_test",
+      "rootUri": "file:///home/addweb/dev/flutter/packages/flutter_test",
+      "packageUri": "lib/",
+      "languageVersion": "2.17"
+    },
+    {
+      "name": "js",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/js-0.6.5",
       "packageUri": "lib/",
-      "languageVersion": "2.2"
+      "languageVersion": "2.16"
     },
     {
       "name": "matcher",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/matcher-0.12.10-nullsafety",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/matcher-0.12.13",
+      "packageUri": "lib/",
+      "languageVersion": "2.18"
+    },
+    {
+      "name": "material_color_utilities",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/material_color_utilities-0.2.0",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.13"
     },
     {
       "name": "meta",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/meta-1.3.0-nullsafety.2",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/meta-1.8.0",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.12"
     },
     {
       "name": "path",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/path-1.8.0-nullsafety",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/path-1.8.2",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.12"
     },
     {
       "name": "sky_engine",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/bin/cache/pkg/sky_engine",
+      "rootUri": "file:///home/addweb/dev/flutter/bin/cache/pkg/sky_engine",
       "packageUri": "lib/",
-      "languageVersion": "1.11"
+      "languageVersion": "2.12"
     },
     {
       "name": "source_span",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/source_span-1.8.0-nullsafety",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/source_span-1.9.1",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.14"
     },
     {
       "name": "stack_trace",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/stack_trace-1.10.0-nullsafety",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/stack_trace-1.11.0",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.18"
     },
     {
       "name": "stream_channel",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/stream_channel-2.1.0-nullsafety",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/stream_channel-2.1.1",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.14"
     },
     {
       "name": "string_scanner",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/string_scanner-1.1.0-nullsafety",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/string_scanner-1.2.0",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.18"
     },
     {
       "name": "term_glyph",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/term_glyph-1.2.0-nullsafety",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/term_glyph-1.2.1",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.12"
     },
     {
       "name": "test_api",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/test_api-0.2.19-nullsafety",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/test_api-0.4.16",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
-    },
-    {
-      "name": "typed_data",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/typed_data-1.3.0-nullsafety.2",
-      "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.18"
     },
     {
       "name": "vector_math",
-      "rootUri": "file:///home/addweb/flutter_linux_1.20.3-stable/flutter/.pub-cache/hosted/pub.dartlang.org/vector_math-2.1.0-nullsafety.2",
+      "rootUri": "file:///home/addweb/.pub-cache/hosted/pub.dev/vector_math-2.1.4",
       "packageUri": "lib/",
-      "languageVersion": "2.10"
+      "languageVersion": "2.14"
     },
     {
       "name": "custom_camera",
       "rootUri": "../",
       "packageUri": "lib/",
-      "languageVersion": "2.7"
+      "languageVersion": "2.19"
     }
   ],
-  "generated": "2020-11-27T13:27:27.877080Z",
+  "generated": "2023-05-02T07:56:34.697863Z",
   "generator": "pub",
-  "generatorVersion": "2.10.0-136.0.dev"
+  "generatorVersion": "2.19.5"
 }
Index: example/linux/flutter/generated_plugins.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#\n# Generated file, do not edit.\n#\n\nlist(APPEND FLUTTER_PLUGIN_LIST\n)\n\nset(PLUGIN_BUNDLED_LIBRARIES)\n\nforeach(plugin ${FLUTTER_PLUGIN_LIST})\n  add_subdirectory(flutter/ephemeral/.plugin_symlinks/${plugin}/linux plugins/${plugin})\n  target_link_libraries(${BINARY_NAME} PRIVATE ${plugin}_plugin)\n  list(APPEND PLUGIN_BUNDLED_LIBRARIES $<TARGET_FILE:${plugin}_plugin>)\n  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${plugin}_bundled_libraries})\nendforeach(plugin)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/example/linux/flutter/generated_plugins.cmake b/example/linux/flutter/generated_plugins.cmake
--- a/example/linux/flutter/generated_plugins.cmake	(revision d4d887d615bf38810ce6cc75cd132d5eee593dcb)
+++ b/example/linux/flutter/generated_plugins.cmake	(date 1683014254468)
@@ -5,6 +5,9 @@
 list(APPEND FLUTTER_PLUGIN_LIST
 )
 
+list(APPEND FLUTTER_FFI_PLUGIN_LIST
+)
+
 set(PLUGIN_BUNDLED_LIBRARIES)
 
 foreach(plugin ${FLUTTER_PLUGIN_LIST})
@@ -13,3 +16,8 @@
   list(APPEND PLUGIN_BUNDLED_LIBRARIES $<TARGET_FILE:${plugin}_plugin>)
   list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${plugin}_bundled_libraries})
 endforeach(plugin)
+
+foreach(ffi_plugin ${FLUTTER_FFI_PLUGIN_LIST})
+  add_subdirectory(flutter/ephemeral/.plugin_symlinks/${ffi_plugin}/linux plugins/${ffi_plugin})
+  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${ffi_plugin}_bundled_libraries})
+endforeach(ffi_plugin)
Index: example/pubspec.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by pub\n# See https://dart.dev/tools/pub/glossary#lockfile\npackages:\n  async:\n    dependency: transitive\n    description:\n      name: async\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.5.0-nullsafety\"\n  boolean_selector:\n    dependency: transitive\n    description:\n      name: boolean_selector\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0-nullsafety\"\n  characters:\n    dependency: transitive\n    description:\n      name: characters\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0-nullsafety.2\"\n  charcode:\n    dependency: transitive\n    description:\n      name: charcode\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.2.0-nullsafety\"\n  clock:\n    dependency: transitive\n    description:\n      name: clock\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0-nullsafety\"\n  collection:\n    dependency: transitive\n    description:\n      name: collection\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.15.0-nullsafety.2\"\n  cupertino_icons:\n    dependency: \"direct main\"\n    description:\n      name: cupertino_icons\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.0.0\"\n  custom_camera:\n    dependency: \"direct main\"\n    description:\n      path: \"..\"\n      relative: true\n    source: path\n    version: \"0.0.3\"\n  fake_async:\n    dependency: transitive\n    description:\n      name: fake_async\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0-nullsafety\"\n  flutter:\n    dependency: \"direct main\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  flutter_test:\n    dependency: \"direct dev\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  matcher:\n    dependency: transitive\n    description:\n      name: matcher\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.12.10-nullsafety\"\n  meta:\n    dependency: transitive\n    description:\n      name: meta\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.3.0-nullsafety.2\"\n  path:\n    dependency: transitive\n    description:\n      name: path\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.8.0-nullsafety\"\n  sky_engine:\n    dependency: transitive\n    description: flutter\n    source: sdk\n    version: \"0.0.99\"\n  source_span:\n    dependency: transitive\n    description:\n      name: source_span\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.8.0-nullsafety\"\n  stack_trace:\n    dependency: transitive\n    description:\n      name: stack_trace\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.10.0-nullsafety\"\n  stream_channel:\n    dependency: transitive\n    description:\n      name: stream_channel\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0-nullsafety\"\n  string_scanner:\n    dependency: transitive\n    description:\n      name: string_scanner\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0-nullsafety\"\n  term_glyph:\n    dependency: transitive\n    description:\n      name: term_glyph\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.2.0-nullsafety\"\n  test_api:\n    dependency: transitive\n    description:\n      name: test_api\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.2.19-nullsafety\"\n  typed_data:\n    dependency: transitive\n    description:\n      name: typed_data\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.3.0-nullsafety.2\"\n  vector_math:\n    dependency: transitive\n    description:\n      name: vector_math\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0-nullsafety.2\"\nsdks:\n  dart: \">=2.10.0-0.0.dev <2.10.0\"\n  flutter: \">=1.20.0 <2.0.0\"\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/example/pubspec.lock b/example/pubspec.lock
--- a/example/pubspec.lock	(revision d4d887d615bf38810ce6cc75cd132d5eee593dcb)
+++ b/example/pubspec.lock	(date 1683014254036)
@@ -5,49 +5,48 @@
     dependency: transitive
     description:
       name: async
-      url: "https://pub.dartlang.org"
+      sha256: bfe67ef28df125b7dddcea62755991f807aa39a2492a23e1550161692950bbe0
+      url: "https://pub.dev"
     source: hosted
-    version: "2.5.0-nullsafety"
+    version: "2.10.0"
   boolean_selector:
     dependency: transitive
     description:
       name: boolean_selector
-      url: "https://pub.dartlang.org"
+      sha256: "6cfb5af12253eaf2b368f07bacc5a80d1301a071c73360d746b7f2e32d762c66"
+      url: "https://pub.dev"
     source: hosted
-    version: "2.1.0-nullsafety"
+    version: "2.1.1"
   characters:
     dependency: transitive
     description:
       name: characters
-      url: "https://pub.dartlang.org"
-    source: hosted
-    version: "1.1.0-nullsafety.2"
-  charcode:
-    dependency: transitive
-    description:
-      name: charcode
-      url: "https://pub.dartlang.org"
+      sha256: e6a326c8af69605aec75ed6c187d06b349707a27fbff8222ca9cc2cff167975c
+      url: "https://pub.dev"
     source: hosted
-    version: "1.2.0-nullsafety"
+    version: "1.2.1"
   clock:
     dependency: transitive
     description:
       name: clock
-      url: "https://pub.dartlang.org"
+      sha256: cb6d7f03e1de671e34607e909a7213e31d7752be4fb66a86d29fe1eb14bfb5cf
+      url: "https://pub.dev"
     source: hosted
-    version: "1.1.0-nullsafety"
+    version: "1.1.1"
   collection:
     dependency: transitive
     description:
       name: collection
-      url: "https://pub.dartlang.org"
+      sha256: cfc915e6923fe5ce6e153b0723c753045de46de1b4d63771530504004a45fae0
+      url: "https://pub.dev"
     source: hosted
-    version: "1.15.0-nullsafety.2"
+    version: "1.17.0"
   cupertino_icons:
     dependency: "direct main"
     description:
       name: cupertino_icons
-      url: "https://pub.dartlang.org"
+      sha256: "518143a923a4c83ddc2fa0bfbbbd750d8e31d21d90ecad21b570ea94df9807b1"
+      url: "https://pub.dev"
     source: hosted
     version: "1.0.0"
   custom_camera:
@@ -56,14 +55,15 @@
       path: ".."
       relative: true
     source: path
-    version: "0.0.3"
+    version: "0.0.4"
   fake_async:
     dependency: transitive
     description:
       name: fake_async
-      url: "https://pub.dartlang.org"
+      sha256: "511392330127add0b769b75a987850d136345d9227c6b94c96a04cf4a391bf78"
+      url: "https://pub.dev"
     source: hosted
-    version: "1.1.0-nullsafety"
+    version: "1.3.1"
   flutter:
     dependency: "direct main"
     description: flutter
@@ -74,27 +74,46 @@
     description: flutter
     source: sdk
     version: "0.0.0"
+  js:
+    dependency: transitive
+    description:
+      name: js
+      sha256: "5528c2f391ededb7775ec1daa69e65a2d61276f7552de2b5f7b8d34ee9fd4ab7"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.6.5"
   matcher:
     dependency: transitive
     description:
       name: matcher
-      url: "https://pub.dartlang.org"
+      sha256: "16db949ceee371e9b99d22f88fa3a73c4e59fd0afed0bd25fc336eb76c198b72"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.12.13"
+  material_color_utilities:
+    dependency: transitive
+    description:
+      name: material_color_utilities
+      sha256: d92141dc6fe1dad30722f9aa826c7fbc896d021d792f80678280601aff8cf724
+      url: "https://pub.dev"
     source: hosted
-    version: "0.12.10-nullsafety"
+    version: "0.2.0"
   meta:
     dependency: transitive
     description:
       name: meta
-      url: "https://pub.dartlang.org"
+      sha256: "6c268b42ed578a53088d834796959e4a1814b5e9e164f147f580a386e5decf42"
+      url: "https://pub.dev"
     source: hosted
-    version: "1.3.0-nullsafety.2"
+    version: "1.8.0"
   path:
     dependency: transitive
     description:
       name: path
-      url: "https://pub.dartlang.org"
+      sha256: db9d4f58c908a4ba5953fcee2ae317c94889433e5024c27ce74a37f94267945b
+      url: "https://pub.dev"
     source: hosted
-    version: "1.8.0-nullsafety"
+    version: "1.8.2"
   sky_engine:
     dependency: transitive
     description: flutter
@@ -104,58 +123,58 @@
     dependency: transitive
     description:
       name: source_span
-      url: "https://pub.dartlang.org"
+      sha256: dd904f795d4b4f3b870833847c461801f6750a9fa8e61ea5ac53f9422b31f250
+      url: "https://pub.dev"
     source: hosted
-    version: "1.8.0-nullsafety"
+    version: "1.9.1"
   stack_trace:
     dependency: transitive
     description:
       name: stack_trace
-      url: "https://pub.dartlang.org"
+      sha256: c3c7d8edb15bee7f0f74debd4b9c5f3c2ea86766fe4178eb2a18eb30a0bdaed5
+      url: "https://pub.dev"
     source: hosted
-    version: "1.10.0-nullsafety"
+    version: "1.11.0"
   stream_channel:
     dependency: transitive
     description:
       name: stream_channel
-      url: "https://pub.dartlang.org"
+      sha256: "83615bee9045c1d322bbbd1ba209b7a749c2cbcdcb3fdd1df8eb488b3279c1c8"
+      url: "https://pub.dev"
     source: hosted
-    version: "2.1.0-nullsafety"
+    version: "2.1.1"
   string_scanner:
     dependency: transitive
     description:
       name: string_scanner
-      url: "https://pub.dartlang.org"
+      sha256: "556692adab6cfa87322a115640c11f13cb77b3f076ddcc5d6ae3c20242bedcde"
+      url: "https://pub.dev"
     source: hosted
-    version: "1.1.0-nullsafety"
+    version: "1.2.0"
   term_glyph:
     dependency: transitive
     description:
       name: term_glyph
-      url: "https://pub.dartlang.org"
+      sha256: a29248a84fbb7c79282b40b8c72a1209db169a2e0542bce341da992fe1bc7e84
+      url: "https://pub.dev"
     source: hosted
-    version: "1.2.0-nullsafety"
+    version: "1.2.1"
   test_api:
     dependency: transitive
     description:
       name: test_api
-      url: "https://pub.dartlang.org"
+      sha256: ad540f65f92caa91bf21dfc8ffb8c589d6e4dc0c2267818b4cc2792857706206
+      url: "https://pub.dev"
     source: hosted
-    version: "0.2.19-nullsafety"
-  typed_data:
-    dependency: transitive
-    description:
-      name: typed_data
-      url: "https://pub.dartlang.org"
-    source: hosted
-    version: "1.3.0-nullsafety.2"
+    version: "0.4.16"
   vector_math:
     dependency: transitive
     description:
       name: vector_math
-      url: "https://pub.dartlang.org"
+      sha256: "80b3257d1492ce4d091729e3a67a60407d227c27241d6927be0130c98e741803"
+      url: "https://pub.dev"
     source: hosted
-    version: "2.1.0-nullsafety.2"
+    version: "2.1.4"
 sdks:
-  dart: ">=2.10.0-0.0.dev <2.10.0"
-  flutter: ">=1.20.0 <2.0.0"
+  dart: ">=2.19.5 <3.0.0"
+  flutter: ">=1.20.0"
Index: example/linux/flutter/generated_plugin_registrant.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n//  Generated file. Do not edit.\n//\n\n#include \"generated_plugin_registrant.h\"\n\n\nvoid fl_register_plugins(FlPluginRegistry* registry) {\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/example/linux/flutter/generated_plugin_registrant.cc b/example/linux/flutter/generated_plugin_registrant.cc
--- a/example/linux/flutter/generated_plugin_registrant.cc	(revision d4d887d615bf38810ce6cc75cd132d5eee593dcb)
+++ b/example/linux/flutter/generated_plugin_registrant.cc	(date 1683014254468)
@@ -2,6 +2,8 @@
 //  Generated file. Do not edit.
 //
 
+// clang-format off
+
 #include "generated_plugin_registrant.h"
 
 
Index: example/linux/flutter/generated_plugin_registrant.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n//  Generated file. Do not edit.\n//\n\n#ifndef GENERATED_PLUGIN_REGISTRANT_\n#define GENERATED_PLUGIN_REGISTRANT_\n\n#include <flutter_linux/flutter_linux.h>\n\n// Registers Flutter plugins.\nvoid fl_register_plugins(FlPluginRegistry* registry);\n\n#endif  // GENERATED_PLUGIN_REGISTRANT_\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/example/linux/flutter/generated_plugin_registrant.h b/example/linux/flutter/generated_plugin_registrant.h
--- a/example/linux/flutter/generated_plugin_registrant.h	(revision d4d887d615bf38810ce6cc75cd132d5eee593dcb)
+++ b/example/linux/flutter/generated_plugin_registrant.h	(date 1683014254464)
@@ -2,6 +2,8 @@
 //  Generated file. Do not edit.
 //
 
+// clang-format off
+
 #ifndef GENERATED_PLUGIN_REGISTRANT_
 #define GENERATED_PLUGIN_REGISTRANT_
 
Index: example/lib/new.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:async';\n\nimport 'package:custom_camera/my_camera_plugin.dart';\nimport 'package:custom_camera/my_cameranew.dart';\nimport 'package:example/ocr_text_detail.dart';\nimport 'package:flutter/material.dart';\n\nclass Home extends StatefulWidget {\n  @override\n  _HomeState createState() => _HomeState();\n}\n\nclass _HomeState extends State<Home> {\n  // int _cameraBarcode = FlutterMobileVision.CAMERA_BACK;\n  // int _onlyFormatBarcode = Barcode.ALL_FORMATS;\n  //List<Barcode> _barcodes = [];\n\n  int _cameraOcr = MyCamera.CAMERA_BACK;\n  bool _autoFocusOcr = true;\n  bool _torchOcr = false;\n  bool _multipleOcr = true;\n  bool _waitTapOcr = true;\n  bool _showTextOcr = true;\n  Call _previewOcr;\n  List<OcrText> _textsOcr = [];\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('OCR'),\n        ),\n        body: Stack(children: [\n          _getOcrScreen(context),\n          // _getFaceScreen(context),\n        ]),\n      ),\n    );\n  }\n\n  List<DropdownMenuItem<int>> _getCameras() {\n    List<DropdownMenuItem<int>> cameraItems = [];\n\n    cameraItems.add(DropdownMenuItem(\n      child: Text('BACK'),\n      value: MyCamera.CAMERA_BACK,\n    ));\n\n    return cameraItems;\n  }\n\n  Widget _getOcrScreen(BuildContext context) {\n    List<Widget> items = [];\n\n    items.add(Padding(\n      padding: const EdgeInsets.only(\n        top: 8.0,\n        left: 18.0,\n        right: 18.0,\n      ),\n      child: const Text('Camera:'),\n    ));\n\n    items.add(Padding(\n      padding: const EdgeInsets.only(\n        left: 18.0,\n        right: 18.0,\n      ),\n      child: DropdownButton(\n        items: _getCameras(),\n        onChanged: (value) {\n          _previewOcr = null;\n          setState(() => _cameraOcr = value);\n        },\n        value: _cameraOcr,\n      ),\n    ));\n\n    items.add(SwitchListTile(\n      title: const Text('Auto focus:'),\n      value: _autoFocusOcr,\n      onChanged: (value) => setState(() => _autoFocusOcr = value),\n    ));\n\n    items.add(SwitchListTile(\n      title: const Text('Torch:'),\n      value: _torchOcr,\n      onChanged: (value) => setState(() => _torchOcr = value),\n    ));\n\n    items.add(SwitchListTile(\n      title: const Text('Return all texts:'),\n      value: _multipleOcr,\n      onChanged: (value) => setState(() => _multipleOcr = value),\n    ));\n\n    items.add(SwitchListTile(\n      title: const Text('Capture when tap screen:'),\n      value: _waitTapOcr,\n      onChanged: (value) => setState(() => _waitTapOcr = value),\n    ));\n\n    items.add(SwitchListTile(\n      title: const Text('Show text:'),\n      value: _showTextOcr,\n      onChanged: (value) => setState(() => _showTextOcr = value),\n    ));\n\n    items.add(\n      Padding(\n        padding: const EdgeInsets.only(\n          left: 18.0,\n          right: 18.0,\n          bottom: 12.0,\n        ),\n        child: RaisedButton(\n          onPressed: _read,\n          child: Text('READ!'),\n        ),\n      ),\n    );\n\n    items.addAll(\n      ListTile.divideTiles(\n        context: context,\n        tiles: _textsOcr\n            .map(\n              (ocrText) => OcrTextWidget(ocrText),\n            )\n            .toList(),\n      ),\n    );\n\n    return ListView(\n      padding: const EdgeInsets.only(\n        top: 12.0,\n      ),\n      children: items,\n    );\n  }\n\n  ///\n  /// OCR Method\n  ///\n  Future<Null> _read() async {\n    List<OcrText> texts = [];\n    try {\n      texts = await MyCameraPlugin.read(\n        flash: _torchOcr,\n        autoFocus: _autoFocusOcr,\n        multiple: _multipleOcr,\n        waitTap: _waitTapOcr,\n        showText: _showTextOcr,\n        preview: _previewOcr,\n        camera: _cameraOcr,\n        fps: 2.0,\n      );\n    } on Exception {\n      texts.add(OcrText(''));\n    }\n\n    if (!mounted) return;\n  }\n}\n\nclass OcrTextWidget extends StatelessWidget {\n  final OcrText ocrText;\n\n  OcrTextWidget(this.ocrText);\n\n  @override\n  Widget build(BuildContext context) {\n    return ListTile(\n      leading: const Icon(Icons.title),\n      title: Text(ocrText.value),\n      subtitle: Text(ocrText.language),\n      trailing: const Icon(Icons.arrow_forward),\n      onTap: () => Navigator.of(context).push(\n        MaterialPageRoute(\n          builder: (context) => OcrTextDetail(ocrText),\n        ),\n      ),\n    );\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/example/lib/new.dart b/example/lib/new.dart
--- a/example/lib/new.dart	(revision d4d887d615bf38810ce6cc75cd132d5eee593dcb)
+++ b/example/lib/new.dart	(date 1683013728112)
@@ -114,7 +114,7 @@
           right: 18.0,
           bottom: 12.0,
         ),
-        child: RaisedButton(
+        child: ElevatedButton(
           onPressed: _read,
           child: Text('READ!'),
         ),
Index: .idea/libraries/Dart_SDK.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\n  <library name=\"Dart SDK\">\n    <CLASSES>\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/async\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/cli\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/collection\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/convert\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/core\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/developer\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/ffi\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/html\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/indexed_db\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/io\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/isolate\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/js\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/js_util\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/math\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/mirrors\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/svg\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/typed_data\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/wasm\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/web_audio\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/web_gl\" />\n      <root url=\"file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/web_sql\" />\n    </CLASSES>\n    <JAVADOC />\n    <SOURCES />\n  </library>\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Dart_SDK.xml b/.idea/libraries/Dart_SDK.xml
--- a/.idea/libraries/Dart_SDK.xml	(revision d4d887d615bf38810ce6cc75cd132d5eee593dcb)
+++ b/.idea/libraries/Dart_SDK.xml	(date 1683013631295)
@@ -1,27 +1,25 @@
 <component name="libraryTable">
   <library name="Dart SDK">
     <CLASSES>
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/async" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/cli" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/collection" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/convert" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/core" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/developer" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/ffi" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/html" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/indexed_db" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/io" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/isolate" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/js" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/js_util" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/math" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/mirrors" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/svg" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/typed_data" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/wasm" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/web_audio" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/web_gl" />
-      <root url="file://$USER_HOME$/flutter_linux_1.20.3-stable/flutter/bin/cache/dart-sdk/lib/web_sql" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/async" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/cli" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/collection" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/convert" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/core" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/developer" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/ffi" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/html" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/indexed_db" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/io" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/isolate" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/js" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/js_util" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/math" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/mirrors" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/svg" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/typed_data" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/web_audio" />
+      <root url="file://$USER_HOME$/dev/flutter/bin/cache/dart-sdk/lib/web_gl" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
Index: pubspec.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by pub\n# See https://dart.dev/tools/pub/glossary#lockfile\npackages:\n  async:\n    dependency: transitive\n    description:\n      name: async\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.5.0-nullsafety\"\n  boolean_selector:\n    dependency: transitive\n    description:\n      name: boolean_selector\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0-nullsafety\"\n  characters:\n    dependency: transitive\n    description:\n      name: characters\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0-nullsafety.2\"\n  charcode:\n    dependency: transitive\n    description:\n      name: charcode\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.2.0-nullsafety\"\n  clock:\n    dependency: transitive\n    description:\n      name: clock\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0-nullsafety\"\n  collection:\n    dependency: transitive\n    description:\n      name: collection\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.15.0-nullsafety.2\"\n  fake_async:\n    dependency: transitive\n    description:\n      name: fake_async\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0-nullsafety\"\n  flutter:\n    dependency: \"direct main\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  flutter_test:\n    dependency: \"direct dev\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  matcher:\n    dependency: transitive\n    description:\n      name: matcher\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.12.10-nullsafety\"\n  meta:\n    dependency: transitive\n    description:\n      name: meta\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.3.0-nullsafety.2\"\n  path:\n    dependency: transitive\n    description:\n      name: path\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.8.0-nullsafety\"\n  sky_engine:\n    dependency: transitive\n    description: flutter\n    source: sdk\n    version: \"0.0.99\"\n  source_span:\n    dependency: transitive\n    description:\n      name: source_span\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.8.0-nullsafety\"\n  stack_trace:\n    dependency: transitive\n    description:\n      name: stack_trace\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.10.0-nullsafety\"\n  stream_channel:\n    dependency: transitive\n    description:\n      name: stream_channel\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0-nullsafety\"\n  string_scanner:\n    dependency: transitive\n    description:\n      name: string_scanner\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.1.0-nullsafety\"\n  term_glyph:\n    dependency: transitive\n    description:\n      name: term_glyph\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.2.0-nullsafety\"\n  test_api:\n    dependency: transitive\n    description:\n      name: test_api\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"0.2.19-nullsafety\"\n  typed_data:\n    dependency: transitive\n    description:\n      name: typed_data\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"1.3.0-nullsafety.2\"\n  vector_math:\n    dependency: transitive\n    description:\n      name: vector_math\n      url: \"https://pub.dartlang.org\"\n    source: hosted\n    version: \"2.1.0-nullsafety.2\"\nsdks:\n  dart: \">=2.10.0-0.0.dev <2.10.0\"\n  flutter: \">=1.20.0 <2.0.0\"\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pubspec.lock b/pubspec.lock
--- a/pubspec.lock	(revision d4d887d615bf38810ce6cc75cd132d5eee593dcb)
+++ b/pubspec.lock	(date 1683014253888)
@@ -5,51 +5,50 @@
     dependency: transitive
     description:
       name: async
-      url: "https://pub.dartlang.org"
+      sha256: bfe67ef28df125b7dddcea62755991f807aa39a2492a23e1550161692950bbe0
+      url: "https://pub.dev"
     source: hosted
-    version: "2.5.0-nullsafety"
+    version: "2.10.0"
   boolean_selector:
     dependency: transitive
     description:
       name: boolean_selector
-      url: "https://pub.dartlang.org"
+      sha256: "6cfb5af12253eaf2b368f07bacc5a80d1301a071c73360d746b7f2e32d762c66"
+      url: "https://pub.dev"
     source: hosted
-    version: "2.1.0-nullsafety"
+    version: "2.1.1"
   characters:
     dependency: transitive
     description:
       name: characters
-      url: "https://pub.dartlang.org"
-    source: hosted
-    version: "1.1.0-nullsafety.2"
-  charcode:
-    dependency: transitive
-    description:
-      name: charcode
-      url: "https://pub.dartlang.org"
+      sha256: e6a326c8af69605aec75ed6c187d06b349707a27fbff8222ca9cc2cff167975c
+      url: "https://pub.dev"
     source: hosted
-    version: "1.2.0-nullsafety"
+    version: "1.2.1"
   clock:
     dependency: transitive
     description:
       name: clock
-      url: "https://pub.dartlang.org"
+      sha256: cb6d7f03e1de671e34607e909a7213e31d7752be4fb66a86d29fe1eb14bfb5cf
+      url: "https://pub.dev"
     source: hosted
-    version: "1.1.0-nullsafety"
+    version: "1.1.1"
   collection:
     dependency: transitive
     description:
       name: collection
-      url: "https://pub.dartlang.org"
+      sha256: cfc915e6923fe5ce6e153b0723c753045de46de1b4d63771530504004a45fae0
+      url: "https://pub.dev"
     source: hosted
-    version: "1.15.0-nullsafety.2"
+    version: "1.17.0"
   fake_async:
     dependency: transitive
     description:
       name: fake_async
-      url: "https://pub.dartlang.org"
+      sha256: "511392330127add0b769b75a987850d136345d9227c6b94c96a04cf4a391bf78"
+      url: "https://pub.dev"
     source: hosted
-    version: "1.1.0-nullsafety"
+    version: "1.3.1"
   flutter:
     dependency: "direct main"
     description: flutter
@@ -60,27 +59,46 @@
     description: flutter
     source: sdk
     version: "0.0.0"
+  js:
+    dependency: transitive
+    description:
+      name: js
+      sha256: "5528c2f391ededb7775ec1daa69e65a2d61276f7552de2b5f7b8d34ee9fd4ab7"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.6.5"
   matcher:
     dependency: transitive
     description:
       name: matcher
-      url: "https://pub.dartlang.org"
+      sha256: "16db949ceee371e9b99d22f88fa3a73c4e59fd0afed0bd25fc336eb76c198b72"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.12.13"
+  material_color_utilities:
+    dependency: transitive
+    description:
+      name: material_color_utilities
+      sha256: d92141dc6fe1dad30722f9aa826c7fbc896d021d792f80678280601aff8cf724
+      url: "https://pub.dev"
     source: hosted
-    version: "0.12.10-nullsafety"
+    version: "0.2.0"
   meta:
     dependency: transitive
     description:
       name: meta
-      url: "https://pub.dartlang.org"
+      sha256: "6c268b42ed578a53088d834796959e4a1814b5e9e164f147f580a386e5decf42"
+      url: "https://pub.dev"
     source: hosted
-    version: "1.3.0-nullsafety.2"
+    version: "1.8.0"
   path:
     dependency: transitive
     description:
       name: path
-      url: "https://pub.dartlang.org"
+      sha256: db9d4f58c908a4ba5953fcee2ae317c94889433e5024c27ce74a37f94267945b
+      url: "https://pub.dev"
     source: hosted
-    version: "1.8.0-nullsafety"
+    version: "1.8.2"
   sky_engine:
     dependency: transitive
     description: flutter
@@ -90,58 +108,58 @@
     dependency: transitive
     description:
       name: source_span
-      url: "https://pub.dartlang.org"
+      sha256: dd904f795d4b4f3b870833847c461801f6750a9fa8e61ea5ac53f9422b31f250
+      url: "https://pub.dev"
     source: hosted
-    version: "1.8.0-nullsafety"
+    version: "1.9.1"
   stack_trace:
     dependency: transitive
     description:
       name: stack_trace
-      url: "https://pub.dartlang.org"
+      sha256: c3c7d8edb15bee7f0f74debd4b9c5f3c2ea86766fe4178eb2a18eb30a0bdaed5
+      url: "https://pub.dev"
     source: hosted
-    version: "1.10.0-nullsafety"
+    version: "1.11.0"
   stream_channel:
     dependency: transitive
     description:
       name: stream_channel
-      url: "https://pub.dartlang.org"
+      sha256: "83615bee9045c1d322bbbd1ba209b7a749c2cbcdcb3fdd1df8eb488b3279c1c8"
+      url: "https://pub.dev"
     source: hosted
-    version: "2.1.0-nullsafety"
+    version: "2.1.1"
   string_scanner:
     dependency: transitive
     description:
       name: string_scanner
-      url: "https://pub.dartlang.org"
+      sha256: "556692adab6cfa87322a115640c11f13cb77b3f076ddcc5d6ae3c20242bedcde"
+      url: "https://pub.dev"
     source: hosted
-    version: "1.1.0-nullsafety"
+    version: "1.2.0"
   term_glyph:
     dependency: transitive
     description:
       name: term_glyph
-      url: "https://pub.dartlang.org"
+      sha256: a29248a84fbb7c79282b40b8c72a1209db169a2e0542bce341da992fe1bc7e84
+      url: "https://pub.dev"
     source: hosted
-    version: "1.2.0-nullsafety"
+    version: "1.2.1"
   test_api:
     dependency: transitive
     description:
       name: test_api
-      url: "https://pub.dartlang.org"
+      sha256: ad540f65f92caa91bf21dfc8ffb8c589d6e4dc0c2267818b4cc2792857706206
+      url: "https://pub.dev"
     source: hosted
-    version: "0.2.19-nullsafety"
-  typed_data:
-    dependency: transitive
-    description:
-      name: typed_data
-      url: "https://pub.dartlang.org"
-    source: hosted
-    version: "1.3.0-nullsafety.2"
+    version: "0.4.16"
   vector_math:
     dependency: transitive
     description:
       name: vector_math
-      url: "https://pub.dartlang.org"
+      sha256: "80b3257d1492ce4d091729e3a67a60407d227c27241d6927be0130c98e741803"
+      url: "https://pub.dev"
     source: hosted
-    version: "2.1.0-nullsafety.2"
+    version: "2.1.4"
 sdks:
-  dart: ">=2.10.0-0.0.dev <2.10.0"
-  flutter: ">=1.20.0 <2.0.0"
+  dart: ">=2.18.0 <3.0.0"
+  flutter: ">=1.20.0"
